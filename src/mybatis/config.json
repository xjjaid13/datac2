{ 
	detail : [
		{
			tableName : 'carve_type',
			daoPath : 'com.dao.carve.CarveTypeMapperDao.java',
			xmlPath : 'com.dao.carve.CarveTypeMapperDao.xml',
			entityPath : 'com.po.carve.CarveType.java'
		},{
			tableName : 'carve_type',
			daoPath : 'com.dao.carve.CarveTypeMapperDao.java',
			xmlPath : 'com.dao.carve.CarveTypeMapperDao.xml',
			entityPath : 'com.po.carve.CarveType.java'
		}
	],
	dbName : 'datac',
	dbIp : '127.0.0.1',
	user : 'root',
	password : '111111',
	template : {
		resultMapString   : '{for}<result property=\"{columnName}\" column=\"{columnName}\" />{endfor}',
		selectString      : 'select * from {tablename} where 1 = 1 {for}<if test="{columnname} != null"> and {columnname} = {#columnname}</if> {endfor} <if test="condition != null"> ${condition}</if>',
		selectListString  : 'select * from {tablename} where 1 = 1 {for}<if test="{columnname} != null"> and {columnname} = {#columnname}</if> {endfor} <if test="condition != null"> ${condition}</if> <if test="startPage != -1"> limit #{startPage},#{page}</if> ',
		selectCountString : 'select count({tableName}Id) from {tablename} where 1 = 1 {for}<if test="{columnname} != null"> and {columnname} = {#columnname}</if> {endfor} <if test="condition != null"> ${condition}</if>',
		insertString      : 'insert into {tablename} ({for}{columnname},{endfor}) values ({for}#{{columnName}},{endfor})',
		deleteString      : 'delete from {tablename} where 1 = 1 {for}<if test="{columnname} != null"> and {columnname} = {#columnname} </if> {endfor} <if test="condition != null"> ${condition}</if>',
		updateString      : 'update {tablename} <set> {for}<if test="{columnname} != null">{columnname} = #{{columnName}},</if>{endfor} </set> where 1 = 1 <if test="{tableName}Id != null"> and {tableName}Id = #{{tableName}Id}</if><if test="condition != null"> ${condition}</if>',
		deleteByIdsString : 'delete from {tablename} where {tableName}Id in (${ids})',
		maxIdString       : 'select max({tableName}Id) from {tablename}',
		daoString         : 'package {daoPathPre};

import com.dao.BaseDao;
import {entityImport};

public interface {daoName} extends BaseDao<{TableName}>{

}',
		
		poString          : 'package {entityPathPre};

import com.po.BasePO;

public class {TableName} extends BasePO{

	private static final long serialVersionUID = 1L;
{for}
	private {type} {columnname};
{endfor}
{for}
	public {type} get{Columnname}() {
		return {columnname};
	}
	{endfor}
	{for}
	public void set{Columnname}({type} {columnname}) {
		this.{columnname} = {columnname};
	}
{endfor}
}'

	}
	
}